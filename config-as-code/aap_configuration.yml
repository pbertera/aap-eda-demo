- name: AAP | Config As Code | Configure the AAP Controller
  hosts: localhost
  connection: local
  gather_facts: false
  tasks:
  - name: Create the Automation Hub credential - published
    ansible.controller.credential:
      name: Automation Hub Token - published
      credential_type: Ansible Galaxy/Automation Hub API Token
      organization: Default
      inputs:
        url: "{{ automation_hub_url_published }}"
        auth_url: "{{ automation_hub_auth_url }}"
        token: "{{ automation_hub_token }}" 
      controller_host: "{{ aap2_controller_url }}"
      controller_username: "{{ aap2_controller_username }}"
      controller_password: "{{ aap2_controller_password }}"
      validate_certs: "{{ aap2_controller_validate_certs }}"
 
  - name: Create the Automation Hub credential - validated
    ansible.controller.credential:
      name: Automation Hub Token - validated
      credential_type: Ansible Galaxy/Automation Hub API Token
      organization: Default
      inputs:
        url: "{{ automation_hub_url_validated }}"
        auth_url: "{{ automation_hub_auth_url }}"
        token: "{{ automation_hub_token }}" 
      controller_host: "{{ aap2_controller_url }}"
      controller_username: "{{ aap2_controller_username }}"
      controller_password: "{{ aap2_controller_password }}"
      validate_certs: "{{ aap2_controller_validate_certs }}"

  - name: Add the Automation Hub credentials to the Default Org
    ansible.controller.organization:
      name: Default
      galaxy_credentials:
      - Ansible Galaxy
      - Automation Hub Token - validated
      - Automation Hub Token - published
      controller_host: "{{ aap2_controller_url }}"
      controller_username: "{{ aap2_controller_username }}"
      controller_password: "{{ aap2_controller_password }}"
      validate_certs: "{{ aap2_controller_validate_certs }}"

  - name: Create AAP Project
    ansible.controller.project:
      name: "{{ aap2_controller_project }}"
      organization: Default
      state: present
      scm_type: git
      scm_url: "{{ scm_url }}" 
      controller_host: "{{ aap2_controller_url }}"
      controller_username: "{{ aap2_controller_username }}"
      controller_password: "{{ aap2_controller_password }}"
      validate_certs: "{{ aap2_controller_validate_certs }}"

  - name: "Sync the project {{ aap2_controller_project }}"
    ansible.controller.project_update:
      project: "{{ aap2_controller_project }}"
      controller_host: "{{ aap2_controller_url }}"
      controller_username: "{{ aap2_controller_username }}"
      controller_password: "{{ aap2_controller_password }}"
      validate_certs: "{{ aap2_controller_validate_certs }}"
    when: aap2_controller_sync_project | bool

  - name: Add servicenow.itsm credential type
    ansible.controller.credential_type:
      name: servicenow.itsm
      kind: cloud
      inputs:
        fields:
        - id: snow_url
          type: string
          label: SNOW Instance
        - id: snow_user
          type: string
          label: SNOW Username
        - id: snow_pwd
          type: string
          secret: true
          label: SNOW Password
      injectors:
        extra_vars:
          snow_instance: !unsafe "{{ snow_url }}"
          snow_username: !unsafe "{{ snow_user }}"
          snow_password: !unsafe "{{ snow_pwd }}"
      controller_host: "{{ aap2_controller_url }}"
      controller_username: "{{ aap2_controller_username }}"
      controller_password: "{{ aap2_controller_password }}"
      validate_certs: "{{ aap2_controller_validate_certs }}"

  - name: Crete the servicenow.itsm credential
    ansible.controller.credential:
      name: Service Now
      credential_type: servicenow.itsm
      organization: Default
      inputs:
        snow_url: "{{ servicenow_instance_url }}"
        snow_user: "{{ servicenow_instance_user }}"
        snow_pwd: "{{ servicenow_instance_password }}" 
      controller_host: "{{ aap2_controller_url }}"
      controller_username: "{{ aap2_controller_username }}"
      controller_password: "{{ aap2_controller_password }}"
      validate_certs: "{{ aap2_controller_validate_certs }}"

  - name: Create the Alertmanager Job Template
    ansible.controller.job_template:
      name: Demo EDA Alertmanager handler
      job_type: "run"
      organization: "Default"
      inventory: Demo Inventory
      playbook: playbooks/alert-handler.yml
      state: "present"
      project: "{{ aap2_controller_project }}"
      credentials:
      - Service Now
      ask_variables_on_launch: true
      controller_host: "{{ aap2_controller_url }}"
      controller_username: "{{ aap2_controller_username }}"
      controller_password: "{{ aap2_controller_password }}"
      validate_certs: "{{ aap2_controller_validate_certs }}"

  - name: Create the Webhook Job Template
    ansible.controller.job_template:
      name: Demo EDA Webhook handler
      job_type: "run"
      organization: "Default"
      inventory: Demo Inventory
      playbook: playbooks/webhook-handler.yml
      state: "present"
      project: "{{ aap2_controller_project }}"
      ask_variables_on_launch: true
      controller_host: "{{ aap2_controller_url }}"
      controller_username: "{{ aap2_controller_username }}"
      controller_password: "{{ aap2_controller_password }}"
      validate_certs: "{{ aap2_controller_validate_certs }}"
